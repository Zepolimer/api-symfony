<?php //is_granted%2528%2522ROLE_USER%2522%2520or%2520%2522ROLE_ADMIN%2522%2529%2520or%2520%2528object%2520%253D%253D%2520user%2520and%2520previous_object%2520%253D%253D%2520user%2529%252F%252F_api_normalization_context%257C_api_operation%257C_api_operation_name%257C_api_resource_class%257C_controller%257C_firewall_context%257C_format%257C_route%257C_route_params%257C_stateless%257C_stopwatch_token%257Cauth_checker%257Cdata%257Cid%257Cobject%257Cprevious_data%257Cprevious_object%257Crequest%257Croles%257Ctoken%257Ctrust_resolver%257Cuser

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\ExpressionLanguage\\ParsedExpression'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\ParsedExpression')),
        clone ($p['Symfony\\Component\\ExpressionLanguage\\Node\\BinaryNode'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\Node\\BinaryNode')),
        clone ($p['Symfony\\Component\\ExpressionLanguage\\Node\\FunctionNode'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\Node\\FunctionNode')),
        clone ($p['Symfony\\Component\\ExpressionLanguage\\Node\\Node'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\Node\\Node')),
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\BinaryNode'],
        clone ($p['Symfony\\Component\\ExpressionLanguage\\Node\\ConstantNode'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\Node\\ConstantNode')),
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\ConstantNode'],
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\BinaryNode'],
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\BinaryNode'],
        clone ($p['Symfony\\Component\\ExpressionLanguage\\Node\\NameNode'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\ExpressionLanguage\\Node\\NameNode')),
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\NameNode'],
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\BinaryNode'],
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\NameNode'],
        clone $p['Symfony\\Component\\ExpressionLanguage\\Node\\NameNode'],
    ],
    null,
    [
        'Symfony\\Component\\ExpressionLanguage\\Expression' => [
            'expression' => [
                'is_granted("ROLE_USER" or "ROLE_ADMIN") or (object == user and previous_object == user)',
            ],
        ],
        'Symfony\\Component\\ExpressionLanguage\\ParsedExpression' => [
            'nodes' => [
                $o[1],
            ],
        ],
        'stdClass' => [
            'nodes' => [
                1 => [
                    'left' => $o[2],
                    'right' => $o[7],
                ],
                [
                    'arguments' => $o[3],
                ],
                [
                    $o[4],
                ],
                [
                    'left' => $o[5],
                    'right' => $o[6],
                ],
                7 => [
                    'left' => $o[8],
                    'right' => $o[11],
                ],
                [
                    'left' => $o[9],
                    'right' => $o[10],
                ],
                11 => [
                    'left' => $o[12],
                    'right' => $o[13],
                ],
            ],
            'attributes' => [
                1 => [
                    'operator' => 'or',
                ],
                [
                    'name' => 'is_granted',
                ],
                4 => [
                    'operator' => 'or',
                ],
                [
                    'value' => 'ROLE_USER',
                ],
                [
                    'value' => 'ROLE_ADMIN',
                ],
                [
                    'operator' => 'and',
                ],
                [
                    'operator' => '==',
                ],
                [
                    'name' => 'object',
                ],
                [
                    'name' => 'user',
                ],
                [
                    'operator' => '==',
                ],
                [
                    'name' => 'previous_object',
                ],
                [
                    'name' => 'user',
                ],
            ],
        ],
        'Symfony\\Component\\ExpressionLanguage\\Node\\ConstantNode' => [
            'isNullSafe' => [
                5 => false,
                false,
            ],
            'isIdentifier' => [
                5 => false,
                false,
            ],
        ],
    ],
    $o[0],
    []
); }];
